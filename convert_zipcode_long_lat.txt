{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red36\green38\blue41;\red235\green236\blue237;\red13\green0\blue129;
\red104\green26\blue29;\red37\green127\blue159;\red43\green39\blue19;\red13\green0\blue129;\red235\green236\blue237;
\red36\green38\blue41;\red37\green127\blue159;\red104\green26\blue29;\red27\green29\blue31;\red43\green39\blue19;
}
{\*\expandedcolortbl;;\cssrgb\c18824\c20000\c21176;\cssrgb\c93725\c94118\c94510;\cssrgb\c6275\c6275\c58039;
\cssrgb\c49020\c15294\c15294;\cssrgb\c16863\c56863\c68627;\cssrgb\c22353\c20000\c9412;\cssrgb\c6275\c6275\c58039;\cssrgb\c93725\c94118\c94510;
\cssrgb\c18824\c20000\c21176;\cssrgb\c16863\c56863\c68627;\cssrgb\c49020\c15294\c15294;\cssrgb\c14118\c15294\c16078;\cssrgb\c22353\c20000\c9412;
}
\margl1440\margr1440\vieww16960\viewh11800\viewkind0
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
 \cf4 var\cf2  lat = \cf5 ''\cf2 ;\
    \cf4 var\cf2  lng = \cf5 ''\cf2 ;\
    \cf4 var\cf2  address = \{zipcode\} \cf4 or\cf2  \{city \cf4 and\cf2  state\};\
    geocoder.geocode( \{ \cf5 'address'\cf2 : address\}, \cf4 function\cf2 (results, status) \{\
      \cf4 if\cf2  (status == google.maps.\cf6 GeocoderStatus\cf2 .OK) \{\
         lat = results[\cf5 0\cf2 ].geometry.location.lat();\
         lng = results[\cf5 0\cf2 ].geometry.location.lng();\
        \});\
      \} \cf4 else\cf2  \{\
        alert(\cf5 "Geocode was not successful for the following reason: "\cf2  + status);\
      \}\
    \});\
    alert(\cf5 'Latitude: '\cf2  + lat + \cf5 ' Logitude: '\cf2  + lng);\cf7 \
\
\
// me\
\
Var location = \{\};\
location[\'91lat\'92] = lat;\
location[\'91lng\'92 = lng;\
\
//use location to find the closest police station:\
\pard\pardeftab720\sl300\partightenfactor0
\cf8 \cb9 \outl0\strokewidth0 \strokec8 var\cf10 \strokec10  service = \cf8 \strokec8 new\cf10 \strokec10  google.maps.places.\cf11 \strokec11 PlacesService\cf10 \strokec10 (map);\
            service.nearbySearch(\{\
                location : myPlace,\
                radius : \cf12 \strokec12 5500\cf10 \strokec10 , // or \
                \cf13 \strokec13 rankBy: google.maps.places.RankBy.DISTANCE // cannot be used with radius\cf10 \strokec10 \
                type : [ \cf12 \strokec12 \'91police\'92\cf10 \strokec10  ]\
            \}, callback);\cf14 \strokec14 \
\cf8 \strokec8 unction\cf10 \strokec10  callback(results, status) \{\
            \cf8 \strokec8 if\cf10 \strokec10  (status === google.maps.places.\cf11 \strokec11 PlacesServiceStatus\cf10 \strokec10 .OK) \{\
                \cf8 \strokec8 for\cf10 \strokec10  (\cf8 \strokec8 var\cf10 \strokec10  i = \cf12 \strokec12 0\cf10 \strokec10 ; i < results.length; i++) \{\
                    createMarker(results[i]);\
                \}\
            \}\
        \}\
\
\cf8 \strokec8 function\cf10 \strokec10  createMarker(place) \{\
            \cf8 \strokec8 var\cf10 \strokec10  placeLoc = place.geometry.location;\
            \cf8 \strokec8 var\cf10 \strokec10  marker = \cf8 \strokec8 new\cf10 \strokec10  google.maps.\cf11 \strokec11 Marker\cf10 \strokec10 (\{\
                map : map,\
                position : place.geometry.location\
            \});\
\
            google.maps.\cf8 \strokec8 event\cf10 \strokec10 .addListener(marker, \cf12 \strokec12 'click'\cf10 \strokec10 , \cf8 \strokec8 function\cf10 \strokec10 () \{\
                infowindow.setContent(place.name);\
                infowindow.open(map, \cf8 \strokec8 this\cf10 \strokec10 );\
            \});\
        \}\cf14 \strokec14 \
}